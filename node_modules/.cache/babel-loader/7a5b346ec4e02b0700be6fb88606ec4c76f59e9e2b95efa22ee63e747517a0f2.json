{"ast":null,"code":"var _jsxFileName = \"/Users/jaypatel/UNB/Winter 23/SS/quiz-app/src/components/quiz/Play.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\nclass Play extends Component {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    this.displayQuestions = function () {\n      let questions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.questions;\n      let currentQuestion = arguments.length > 1 ? arguments[1] : undefined;\n      let nextQuestion = arguments.length > 2 ? arguments[2] : undefined;\n      let previousQuestion = arguments.length > 3 ? arguments[3] : undefined;\n      let {\n        currentQuestionIndex\n      } = _this.state;\n      if (!isEmpty(_this.state.questions)) {\n        questions = _this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion = questions[currentQuestionIndex + 1];\n        previousQuestion = questions[currentQuestionIndex - 1];\n        const answer = currentQuestion.answer;\n        _this.setState({\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberOfQuestions: questions.length,\n          answer,\n          previousRandomNumbers: []\n        }, () => {\n          _this.showOptions();\n          _this.handleDisableButton();\n        });\n      }\n    };\n    this.handleOptionClick = e => {\n      if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        this.correctTimeout = setTimeout(() => {\n          this.correctSound.current.play();\n        }, 500);\n        this.correctAnswer();\n      } else {\n        this.wrongTimeout = setTimeout(() => {\n          this.wrongSound.current.play();\n        }, 500);\n        this.wrongAnswer();\n      }\n    };\n    this.handleNextButtonClick = () => {\n      if (this.state.nextQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n    this.handlePreviousButtonClick = () => {\n      if (this.state.previousQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n    this.handleQuitButtonClick = () => {\n      if (window.confirm('Are you sure you want to quit?')) {\n        this.props.history.push('/');\n      }\n    };\n    this.handleButtonClick = e => {\n      switch (e.target.id) {\n        case 'next-button':\n          this.handleNextButtonClick();\n          break;\n        case 'previous-button':\n          this.handlePreviousButtonClick();\n          break;\n        case 'quit-button':\n          this.handleQuitButtonClick();\n          break;\n        default:\n          break;\n      }\n    };\n    this.correctAnswer = () => {\n      M.toast({\n        html: 'Correct Answer!',\n        classes: 'toast-valid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: 'Wrong Answer!',\n        classes: 'toast-invalid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n    this.showOptions = () => {\n      const options = Array.from(document.querySelectorAll('.option'));\n      options.forEach(option => {\n        option.style.visibility = 'visible';\n      });\n      this.setState({\n        usedFiftyFifty: false\n      });\n    };\n    this.handleHints = () => {\n      if (this.state.hints > 0) {\n        const options = Array.from(document.querySelectorAll('.option'));\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n        while (true) {\n          const randomNumber = Math.round(Math.random() * 3);\n          if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n            options.forEach((option, index) => {\n              if (index === randomNumber) {\n                option.style.visibility = 'hidden';\n                this.setState(prevState => ({\n                  hints: prevState.hints - 1,\n                  previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                }));\n              }\n            });\n            break;\n          }\n          if (this.state.previousRandomNumbers.length >= 3) break;\n        }\n      }\n    };\n    this.handleFiftyFifty = () => {\n      if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n        const options = document.querySelectorAll('.option');\n        const randomNumbers = [];\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n        let count = 0;\n        do {\n          const randomNumber = Math.round(Math.random() * 3);\n          if (randomNumber !== indexOfAnswer) {\n            if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n              randomNumbers.push(randomNumber);\n              count++;\n            } else {\n              while (true) {\n                const newRandomNumber = Math.round(Math.random() * 3);\n                if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                  randomNumbers.push(newRandomNumber);\n                  count++;\n                  break;\n                }\n              }\n            }\n          }\n        } while (count < 2);\n        options.forEach((option, index) => {\n          if (randomNumbers.includes(index)) {\n            option.style.visibility = 'hidden';\n          }\n        });\n        this.setState(prevState => ({\n          fiftyFifty: prevState.fiftyFifty - 1,\n          usedFiftyFifty: true\n        }));\n      }\n    };\n    this.startTimer = () => {\n      const countDownTime = Date.now() + 180000;\n      this.interval = setInterval(() => {\n        const now = new Date();\n        const distance = countDownTime - now;\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n        if (distance < 0) {\n          clearInterval(this.interval);\n          this.setState({\n            time: {\n              minutes: 0,\n              seconds: 0\n            }\n          }, () => {\n            this.endGame();\n          });\n        } else {\n          this.setState({\n            time: {\n              minutes,\n              seconds,\n              distance\n            }\n          });\n        }\n      }, 1000);\n    };\n    this.handleDisableButton = () => {\n      if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n        this.setState({\n          previousButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          previousButtonDisabled: false\n        });\n      }\n      if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n        this.setState({\n          nextButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          nextButtonDisabled: false\n        });\n      }\n    };\n    this.endGame = () => {\n      const {\n        state\n      } = this;\n      const playerStats = {\n        score: state.score,\n        numberOfQuestions: state.numberOfQuestions,\n        numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n        correctAnswers: state.correctAnswers,\n        wrongAnswers: state.wrongAnswers,\n        fiftyFiftyUsed: 2 - state.fiftyFifty,\n        hintsUsed: 5 - state.hints\n      };\n      setTimeout(() => {\n        this.props.history.push('/play/quizSummary', playerStats);\n      }, 1000);\n    };\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      nextButtonDisabled: false,\n      previousButtonDisabled: true,\n      previousRandomNumbers: [],\n      time: {}\n    };\n    this.interval = null;\n  }\n  componentDidMount() {\n    const {\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    } = this.state;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n    this.startTimer();\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      currentQuestion,\n      currentQuestionIndex,\n      fiftyFifty,\n      hints,\n      numberOfQuestions,\n      time\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }, \"Quiz Page\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, \"Quiz Demo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lifeline-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleFiftyFifty,\n      className: \"mdi mdi-set-center mdi-24px lifeline-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lifeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 33\n      }\n    }, fiftyFifty))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleHints,\n      className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lifeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }, hints)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"left\",\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    }, currentQuestionIndex + 1, \" of \", numberOfQuestions), /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames('right valid', {\n        'warning': time.distance <= 120000,\n        'invalid': time.distance < 30000\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 29\n      }\n    }, time.minutes, \":\", time.seconds, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mdi mdi-clock-outline mdi-24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, currentQuestion.question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 25\n      }\n    }, currentQuestion.optionA), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 25\n      }\n    }, currentQuestion.optionB)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 25\n      }\n    }, currentQuestion.optionC), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    }, currentQuestion.optionD)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classnames('', {\n        'disable': this.state.previousButtonDisabled\n      }),\n      id: \"previous-button\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 25\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: classnames('', {\n        'disable': this.state.nextButtonDisabled\n      }),\n      id: \"next-button\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, \"Next\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"quit-button\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 25\n      }\n    }, \"Quit\"))));\n  }\n}\nexport default Play;","map":{"version":3,"names":["React","Component","Fragment","Helmet","M","classnames","questions","isEmpty","Play","constructor","props","displayQuestions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","length","previousRandomNumbers","showOptions","handleDisableButton","handleOptionClick","e","target","innerHTML","toLowerCase","correctTimeout","setTimeout","correctSound","current","play","correctAnswer","wrongTimeout","wrongSound","wrongAnswer","handleNextButtonClick","undefined","prevState","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","id","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","options","Array","from","document","querySelectorAll","forEach","option","style","visibility","usedFiftyFifty","handleHints","hints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","fiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","nextButtonDisabled","playerStats","fiftyFiftyUsed","hintsUsed","componentDidMount","componentWillUnmount","render","float","question","optionA","optionB","optionC","optionD"],"sources":["/Users/jaypatel/UNB/Winter 23/SS/quiz-app/src/components/quiz/Play.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\n\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\n\nclass Play extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            questions,\n            currentQuestion: {},\n            nextQuestion: {},\n            previousQuestion: {},\n            answer: '',\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions: 0,\n            currentQuestionIndex: 0,\n            score: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0,\n            hints: 5,\n            fiftyFifty: 2,\n            usedFiftyFifty: false,\n            nextButtonDisabled: false,\n            previousButtonDisabled: true,\n            previousRandomNumbers: [],\n            time: {}\n        };\n        this.interval = null;\n    }\n\n    componentDidMount () {\n        const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\n        this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n        this.startTimer();\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.interval);\n    }\n\n    displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n        let { currentQuestionIndex } = this.state;   \n        if (!isEmpty(this.state.questions)) {\n            questions = this.state.questions;\n            currentQuestion = questions[currentQuestionIndex];\n            nextQuestion = questions[currentQuestionIndex + 1];\n            previousQuestion = questions[currentQuestionIndex - 1];\n            const answer = currentQuestion.answer;\n            this.setState({\n                currentQuestion,\n                nextQuestion,\n                previousQuestion,\n                numberOfQuestions: questions.length,\n                answer,\n                previousRandomNumbers: []\n            }, () => {\n                this.showOptions();\n                this.handleDisableButton();\n            });\n        }     \n    };\n\n    handleOptionClick = (e) => {\n        if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            this.correctTimeout = setTimeout(() => {\n                this.correctSound.current.play();\n            }, 500);\n            this.correctAnswer();\n        } else {\n            this.wrongTimeout = setTimeout(() => {\n                this.wrongSound.current.play();\n            }, 500);\n            this.wrongAnswer();\n        }\n    }\n\n    handleNextButtonClick = () => {\n        if (this.state.nextQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex + 1\n            }), () => {\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n    handlePreviousButtonClick = () => {\n        if (this.state.previousQuestion !== undefined) {\n            this.setState(prevState => ({\n                currentQuestionIndex: prevState.currentQuestionIndex - 1\n            }), () => {\n                this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            });\n        }\n    };\n\n    handleQuitButtonClick = () => {\n        if (window.confirm('Are you sure you want to quit?')) {\n            this.props.history.push('/');\n        }\n    };\n\n    handleButtonClick = (e) => {\n        switch (e.target.id) {\n            case 'next-button':\n                this.handleNextButtonClick();\n                break;\n\n            case 'previous-button':\n                this.handlePreviousButtonClick();\n                break;\n\n            case 'quit-button':\n                this.handleQuitButtonClick();\n                break;\n\n            default:\n                break;\n        }\n        \n    };\n\n    correctAnswer = () => {\n        M.toast({\n            html: 'Correct Answer!',\n            classes: 'toast-valid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            score: prevState.score + 1,\n            correctAnswers: prevState.correctAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {            \n            if (this.state.nextQuestion === undefined) {\n                this.endGame();\n            } else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    wrongAnswer = () => {\n        navigator.vibrate(1000);\n        M.toast({\n            html: 'Wrong Answer!',\n            classes: 'toast-invalid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            wrongAnswers: prevState.wrongAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), () => {\n            if (this.state.nextQuestion === undefined) {\n                this.endGame();\n            } else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    showOptions = () => {\n        const options = Array.from(document.querySelectorAll('.option'));\n\n        options.forEach(option => {\n            option.style.visibility = 'visible';\n        });\n\n        this.setState({\n            usedFiftyFifty: false\n        });\n    }\n\n    handleHints = () => {\n        if (this.state.hints > 0) {\n            const options = Array.from(document.querySelectorAll('.option'));\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n\n            while (true) {\n                const randomNumber = Math.round(Math.random() * 3);\n                if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n                    options.forEach((option, index) => {\n                        if (index === randomNumber) {\n                            option.style.visibility = 'hidden';\n                            this.setState((prevState) => ({\n                                hints: prevState.hints - 1,\n                                previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                            }));\n                        }\n                    });\n                    break;\n                }\n                if (this.state.previousRandomNumbers.length >= 3) break;\n            }\n        }\n    }\n\n    handleFiftyFifty = () => {\n        if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n            const options = document.querySelectorAll('.option');\n            const randomNumbers = [];\n            let indexOfAnswer;\n\n            options.forEach((option, index) => {\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n                    indexOfAnswer = index;\n                }\n            });\n\n            let count = 0;\n            do {\n                const randomNumber = Math.round(Math.random() * 3);\n                if (randomNumber !== indexOfAnswer) {\n                    if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n                            randomNumbers.push(randomNumber);\n                            count ++;\n                    } else {\n                        while (true) {\n                            const newRandomNumber = Math.round(Math.random() * 3);\n                            if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                                randomNumbers.push(newRandomNumber);\n                                count ++;\n                                break;\n                            }\n                        }\n                    }\n                }\n            } while (count < 2);\n\n            options.forEach((option, index) => {\n                if (randomNumbers.includes(index)) {\n                    option.style.visibility = 'hidden';\n                }\n            });\n            this.setState(prevState => ({\n                fiftyFifty: prevState.fiftyFifty - 1,\n                usedFiftyFifty: true\n            }));\n        }\n    }\n\n    startTimer = () => {\n        const countDownTime = Date.now() + 180000;\n        this.interval = setInterval(() => {\n            const now = new Date();\n            const distance = countDownTime - now;\n\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            if (distance < 0) {\n                clearInterval(this.interval);\n                this.setState({\n                    time: {\n                        minutes: 0,\n                        seconds: 0\n                    }\n                }, () => {\n                    this.endGame();\n                });\n            } else {\n                this.setState({\n                    time: {\n                        minutes,\n                        seconds,\n                        distance\n                    }\n                });\n            }\n        }, 1000);\n    }\n\n    handleDisableButton = () => {\n        if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n            this.setState({\n                previousButtonDisabled: true\n            });\n        } else {\n            this.setState({\n                previousButtonDisabled: false\n            });\n        }\n\n        if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n            this.setState({\n                nextButtonDisabled: true\n            });\n        } else {\n            this.setState({\n                nextButtonDisabled: false\n            });\n        }\n    }\n\n    endGame = () => {\n        const { state } = this;\n        const playerStats = {\n            score: state.score,\n            numberOfQuestions: state.numberOfQuestions,\n            numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n            correctAnswers: state.correctAnswers,\n            wrongAnswers: state.wrongAnswers,\n            fiftyFiftyUsed: 2 - state.fiftyFifty,\n            hintsUsed: 5 - state.hints\n        };\n        setTimeout(() => {\n            this.props.history.push('/play/quizSummary', playerStats);\n        }, 1000);\n    }\n\n    render () {\n        const { \n            currentQuestion, \n            currentQuestionIndex, \n            fiftyFifty, \n            hints, \n            numberOfQuestions,\n            time \n        } = this.state;\n\n        return (\n            <Fragment>\n                <Helmet><title>Quiz Page</title></Helmet>\n                <div className=\"questions\">\n                    <h2>Quiz Demo</h2>\n                    <div className=\"lifeline-container\">\n                        <p>\n                            <span onClick={this.handleFiftyFifty} className=\"mdi mdi-set-center mdi-24px lifeline-icon\">\n                                <span className=\"lifeline\">{fiftyFifty}</span>\n                            </span>\n                        </p>\n                        <p>\n                            <span onClick={this.handleHints} className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\">\n                                <span className=\"lifeline\">{hints}</span>\n                            </span>\n                        </p>\n                    </div>\n                    <div className=\"timer-container\">\n                        <p>\n                            <span className=\"left\" style={{ float: 'left' }}>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\n                            <span className={classnames('right valid', {\n                                'warning': time.distance <= 120000,\n                                'invalid': time.distance < 30000\n                            })}>\n                                {time.minutes}:{time.seconds}\n                            <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\n                        </p>\n                    </div>\n                    <h5>{currentQuestion.question}</h5>\n                    <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\n                    </div>\n                    <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\n                    </div>\n\n                    <div className=\"button-container\">\n                        <button\n                            className={classnames('', {'disable': this.state.previousButtonDisabled})}\n                            id=\"previous-button\"\n                            onClick={this.handleButtonClick}>\n                            Previous\n                        </button>\n                        <button\n                            className={classnames('', {'disable': this.state.nextButtonDisabled})}\n                            id=\"next-button\"\n                            onClick={this.handleButtonClick}>\n                                Next\n                            </button>\n                        <button id=\"quit-button\" onClick={this.handleButtonClick}>Quit</button>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default Play;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}