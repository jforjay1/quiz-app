{"ast":null,"code":"var _jsxFileName = \"/Users/jaypatel/UNB/Winter 23/SS/quiz-app/src/components/quiz/Play.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Play extends Component {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    this.displayQuestions = function () {\n      let questions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.questions;\n      let currentQuestion = arguments.length > 1 ? arguments[1] : undefined;\n      let nextQuestion = arguments.length > 2 ? arguments[2] : undefined;\n      let previousQuestion = arguments.length > 3 ? arguments[3] : undefined;\n      let {\n        currentQuestionIndex\n      } = _this.state;\n      if (!isEmpty(_this.state.questions)) {\n        questions = _this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion = questions[currentQuestionIndex + 1];\n        previousQuestion = questions[currentQuestionIndex - 1];\n        const answer = currentQuestion.answer;\n        _this.setState({\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberOfQuestions: questions.length,\n          answer,\n          previousRandomNumbers: []\n        }, () => {\n          _this.showOptions();\n          _this.handleDisableButton();\n        });\n      }\n    };\n    this.handleOptionClick = e => {\n      if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        this.correctTimeout = setTimeout(() => {\n          this.correctSound.current.play();\n        }, 500);\n        this.correctAnswer();\n      } else {\n        this.wrongTimeout = setTimeout(() => {\n          this.wrongSound.current.play();\n        }, 500);\n        this.wrongAnswer();\n      }\n    };\n    this.handleNextButtonClick = () => {\n      if (this.state.nextQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n    this.handlePreviousButtonClick = () => {\n      if (this.state.previousQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n    this.handleQuitButtonClick = () => {\n      this.props.history.push('/');\n    };\n    this.handleButtonClick = e => {\n      switch (e.target.id) {\n        case 'next-button':\n          this.handleNextButtonClick();\n          break;\n        case 'previous-button':\n          this.handlePreviousButtonClick();\n          break;\n        case 'quit-button':\n          this.handleQuitButtonClick();\n          break;\n        default:\n          break;\n      }\n    };\n    this.correctAnswer = () => {\n      M.toast({\n        html: 'Correct Answer!',\n        classes: 'toast-valid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: 'Wrong Answer!',\n        classes: 'toast-invalid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n    this.showOptions = () => {\n      const options = Array.from(document.querySelectorAll('.option'));\n      options.forEach(option => {\n        option.style.visibility = 'visible';\n      });\n      this.setState({\n        usedFiftyFifty: false\n      });\n    };\n    this.handleHints = () => {\n      if (this.state.hints > 0) {\n        const options = Array.from(document.querySelectorAll('.option'));\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n        while (true) {\n          const randomNumber = Math.round(Math.random() * 3);\n          if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n            options.forEach((option, index) => {\n              if (index === randomNumber) {\n                option.style.visibility = 'hidden';\n                this.setState(prevState => ({\n                  hints: prevState.hints - 1,\n                  previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                }));\n              }\n            });\n            break;\n          }\n          if (this.state.previousRandomNumbers.length >= 3) break;\n        }\n      }\n    };\n    this.handleFiftyFifty = () => {\n      if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n        const options = document.querySelectorAll('.option');\n        const randomNumbers = [];\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n        let count = 0;\n        do {\n          const randomNumber = Math.round(Math.random() * 3);\n          if (randomNumber !== indexOfAnswer) {\n            if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n              randomNumbers.push(randomNumber);\n              count++;\n            } else {\n              while (true) {\n                const newRandomNumber = Math.round(Math.random() * 3);\n                if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                  randomNumbers.push(newRandomNumber);\n                  count++;\n                  break;\n                }\n              }\n            }\n          }\n        } while (count < 2);\n        options.forEach((option, index) => {\n          if (randomNumbers.includes(index)) {\n            option.style.visibility = 'hidden';\n          }\n        });\n        this.setState(prevState => ({\n          fiftyFifty: prevState.fiftyFifty - 1,\n          usedFiftyFifty: true\n        }));\n      }\n    };\n    this.startTimer = () => {\n      const countDownTime = Date.now() + 180000;\n      this.interval = setInterval(() => {\n        const now = new Date();\n        const distance = countDownTime - now;\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n        if (distance < 0) {\n          clearInterval(this.interval);\n          this.setState({\n            time: {\n              minutes: 0,\n              seconds: 0\n            }\n          }, () => {\n            this.endGame();\n          });\n        } else {\n          this.setState({\n            time: {\n              minutes,\n              seconds,\n              distance\n            }\n          });\n        }\n      }, 1000);\n    };\n    this.handleDisableButton = () => {\n      if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n        this.setState({\n          previousButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          previousButtonDisabled: false\n        });\n      }\n      if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n        this.setState({\n          nextButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          nextButtonDisabled: false\n        });\n      }\n    };\n    this.endGame = () => {\n      const {\n        state\n      } = this;\n      const playerStats = {\n        score: state.score,\n        numberOfQuestions: state.numberOfQuestions,\n        numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n        correctAnswers: state.correctAnswers,\n        wrongAnswers: state.wrongAnswers,\n        fiftyFiftyUsed: 2 - state.fiftyFifty,\n        hintsUsed: 5 - state.hints\n      };\n      setTimeout(() => {\n        this.props.history.push('/play/quizSummary', playerStats);\n      }, 1000);\n    };\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      nextButtonDisabled: false,\n      previousButtonDisabled: true,\n      previousRandomNumbers: [],\n      time: {}\n    };\n    this.interval = null;\n  }\n  componentDidMount() {\n    const {\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    } = this.state;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n    this.startTimer();\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      currentQuestion,\n      currentQuestionIndex,\n      fiftyFifty,\n      hints,\n      numberOfQuestions,\n      time\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Quiz Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quiz Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lifeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: this.handleFiftyFifty,\n              className: \"mdi mdi-set-center mdi-24px lifeline-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lifeline\",\n                children: fiftyFifty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: this.handleHints,\n              className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lifeline\",\n                children: hints\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"left\",\n              style: {\n                float: 'left'\n              },\n              children: [currentQuestionIndex + 1, \" of \", numberOfQuestions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classnames('right valid', {\n                'warning': time.distance <= 120000,\n                'invalid': time.distance < 30000\n              }),\n              children: [time.minutes, \":\", time.seconds, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mdi mdi-clock-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionA\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionC\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionD\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classnames('', {\n              'disable': this.state.previousButtonDisabled\n            }),\n            id: \"previous-button\",\n            onClick: this.handleButtonClick,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classnames('', {\n              'disable': this.state.nextButtonDisabled\n            }),\n            id: \"next-button\",\n            onClick: this.handleButtonClick,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"quit-button\",\n            onClick: this.handleButtonClick,\n            children: \"Quit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Play;","map":{"version":3,"names":["React","Component","Fragment","Helmet","M","classnames","questions","isEmpty","Play","constructor","props","displayQuestions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","length","previousRandomNumbers","showOptions","handleDisableButton","handleOptionClick","e","target","innerHTML","toLowerCase","correctTimeout","setTimeout","correctSound","current","play","correctAnswer","wrongTimeout","wrongSound","wrongAnswer","handleNextButtonClick","undefined","prevState","handlePreviousButtonClick","handleQuitButtonClick","history","push","handleButtonClick","id","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","options","Array","from","document","querySelectorAll","forEach","option","style","visibility","usedFiftyFifty","handleHints","hints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","fiftyFifty","randomNumbers","count","newRandomNumber","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","previousButtonDisabled","nextButtonDisabled","playerStats","fiftyFiftyUsed","hintsUsed","componentDidMount","componentWillUnmount","render","float","question","optionA","optionB","optionC","optionD"],"sources":["/Users/jaypatel/UNB/Winter 23/SS/quiz-app/src/components/quiz/Play.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\n\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\n\nclass Play extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      nextButtonDisabled: false,\n      previousButtonDisabled: true,\n      previousRandomNumbers: [],\n      time: {}\n    };\n    this.interval = null;\n  }\n\n  componentDidMount () {\n    const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n    this.startTimer();\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval);\n  }\n\n  displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n    let { currentQuestionIndex } = this.state;   \n    if (!isEmpty(this.state.questions)) {\n      questions = this.state.questions;\n      currentQuestion = questions[currentQuestionIndex];\n      nextQuestion = questions[currentQuestionIndex + 1];\n      previousQuestion = questions[currentQuestionIndex - 1];\n      const answer = currentQuestion.answer;\n      this.setState({\n        currentQuestion,\n        nextQuestion,\n        previousQuestion,\n        numberOfQuestions: questions.length,\n        answer,\n        previousRandomNumbers: []\n      }, () => {\n        this.showOptions();\n        this.handleDisableButton();\n      });\n    }     \n  };\n\n  handleOptionClick = (e) => {\n    if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n      this.correctTimeout = setTimeout(() => {\n        this.correctSound.current.play();\n      }, 500);\n      this.correctAnswer();\n    } else {\n      this.wrongTimeout = setTimeout(() => {\n        this.wrongSound.current.play();\n      }, 500);\n      this.wrongAnswer();\n    }\n  }\n\n  handleNextButtonClick = () => {\n    if (this.state.nextQuestion !== undefined) {\n      this.setState(prevState => ({\n        currentQuestionIndex: prevState.currentQuestionIndex + 1\n      }), () => {\n        this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    }\n  };\n\n  handlePreviousButtonClick = () => {\n    if (this.state.previousQuestion !== undefined) {\n      this.setState(prevState => ({\n        currentQuestionIndex: prevState.currentQuestionIndex - 1\n      }), () => {\n        this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    }\n  };\n\n  handleQuitButtonClick = () => {\n\n    this.props.history.push('/');\n  };\n\n  handleButtonClick = (e) => {\n    switch (e.target.id) {\n      case 'next-button':\n        this.handleNextButtonClick();\n        break;\n\n      case 'previous-button':\n        this.handlePreviousButtonClick();\n        break;\n\n      case 'quit-button':\n        this.handleQuitButtonClick();\n        break;\n\n      default:\n        break;\n    }\n        \n  };\n\n  correctAnswer = () => {\n    M.toast({\n      html: 'Correct Answer!',\n      classes: 'toast-valid',\n      displayLength: 1500\n    });\n    this.setState(prevState => ({\n      score: prevState.score + 1,\n      correctAnswers: prevState.correctAnswers + 1,\n      currentQuestionIndex: prevState.currentQuestionIndex + 1,\n      numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n    }), () => {            \n      if (this.state.nextQuestion === undefined) {\n        this.endGame();\n      } else {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      }\n    });\n  }\n\n  wrongAnswer = () => {\n    navigator.vibrate(1000);\n    M.toast({\n      html: 'Wrong Answer!',\n      classes: 'toast-invalid',\n      displayLength: 1500\n    });\n    this.setState(prevState => ({\n      wrongAnswers: prevState.wrongAnswers + 1,\n      currentQuestionIndex: prevState.currentQuestionIndex + 1,\n      numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n    }), () => {\n      if (this.state.nextQuestion === undefined) {\n        this.endGame();\n      } else {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      }\n    });\n  }\n\n  showOptions = () => {\n    const options = Array.from(document.querySelectorAll('.option'));\n\n    options.forEach(option => {\n      option.style.visibility = 'visible';\n    });\n\n    this.setState({\n      usedFiftyFifty: false\n    });\n  }\n\n  handleHints = () => {\n    if (this.state.hints > 0) {\n      const options = Array.from(document.querySelectorAll('.option'));\n      let indexOfAnswer;\n\n      options.forEach((option, index) => {\n        if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n          indexOfAnswer = index;\n        }\n      });\n\n      while (true) {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n          options.forEach((option, index) => {\n            if (index === randomNumber) {\n              option.style.visibility = 'hidden';\n              this.setState((prevState) => ({\n                hints: prevState.hints - 1,\n                previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n              }));\n            }\n          });\n          break;\n        }\n        if (this.state.previousRandomNumbers.length >= 3) break;\n      }\n    }\n  }\n\n  handleFiftyFifty = () => {\n    if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n      const options = document.querySelectorAll('.option');\n      const randomNumbers = [];\n      let indexOfAnswer;\n\n      options.forEach((option, index) => {\n        if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n          indexOfAnswer = index;\n        }\n      });\n\n      let count = 0;\n      do {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (randomNumber !== indexOfAnswer) {\n          if (randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n            randomNumbers.push(randomNumber);\n            count ++;\n          } else {\n            while (true) {\n              const newRandomNumber = Math.round(Math.random() * 3);\n              if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                randomNumbers.push(newRandomNumber);\n                count ++;\n                break;\n              }\n            }\n          }\n        }\n      } while (count < 2);\n\n      options.forEach((option, index) => {\n        if (randomNumbers.includes(index)) {\n          option.style.visibility = 'hidden';\n        }\n      });\n      this.setState(prevState => ({\n        fiftyFifty: prevState.fiftyFifty - 1,\n        usedFiftyFifty: true\n      }));\n    }\n  }\n\n  startTimer = () => {\n    const countDownTime = Date.now() + 180000;\n    this.interval = setInterval(() => {\n      const now = new Date();\n      const distance = countDownTime - now;\n\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        clearInterval(this.interval);\n        this.setState({\n          time: {\n            minutes: 0,\n            seconds: 0\n          }\n        }, () => {\n          this.endGame();\n        });\n      } else {\n        this.setState({\n          time: {\n            minutes,\n            seconds,\n            distance\n          }\n        });\n      }\n    }, 1000);\n  }\n\n  handleDisableButton = () => {\n    if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n      this.setState({\n        previousButtonDisabled: true\n      });\n    } else {\n      this.setState({\n        previousButtonDisabled: false\n      });\n    }\n\n    if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n      this.setState({\n        nextButtonDisabled: true\n      });\n    } else {\n      this.setState({\n        nextButtonDisabled: false\n      });\n    }\n  }\n\n  endGame = () => {\n    const { state } = this;\n    const playerStats = {\n      score: state.score,\n      numberOfQuestions: state.numberOfQuestions,\n      numberOfAnsweredQuestions: state.correctAnswers + state.wrongAnswers,\n      correctAnswers: state.correctAnswers,\n      wrongAnswers: state.wrongAnswers,\n      fiftyFiftyUsed: 2 - state.fiftyFifty,\n      hintsUsed: 5 - state.hints\n    };\n    setTimeout(() => {\n      this.props.history.push('/play/quizSummary', playerStats);\n    }, 1000);\n  }\n\n  render () {\n    const { \n      currentQuestion, \n      currentQuestionIndex, \n      fiftyFifty, \n      hints, \n      numberOfQuestions,\n      time \n    } = this.state;\n\n    return (\n            <Fragment>\n                <Helmet><title>Quiz Page</title></Helmet>\n                <div className=\"questions\">\n                    <h2>Quiz Demo</h2>\n                    <div className=\"lifeline-container\">\n                        <p>\n                            <span onClick={this.handleFiftyFifty} className=\"mdi mdi-set-center mdi-24px lifeline-icon\">\n                                <span className=\"lifeline\">{fiftyFifty}</span>\n                            </span>\n                        </p>\n                        <p>\n                            <span onClick={this.handleHints} className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\">\n                                <span className=\"lifeline\">{hints}</span>\n                            </span>\n                        </p>\n                    </div>\n                    <div className=\"timer-container\">\n                        <p>\n                            <span className=\"left\" style={{ float: 'left' }}>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\n                            <span className={classnames('right valid', {\n                              'warning': time.distance <= 120000,\n                              'invalid': time.distance < 30000\n                            })}>\n                                {time.minutes}:{time.seconds}\n                            <span  className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\n                        </p>\n                    </div>\n                    <h5>{currentQuestion.question}</h5>\n                    <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\n                    </div>\n                    <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\n                    </div>\n\n                    <div className=\"button-container\">\n                        <button\n                            className={classnames('', {'disable': this.state.previousButtonDisabled})}\n                            id=\"previous-button\"\n                            onClick={this.handleButtonClick}>\n                            Previous\n                        </button>\n                        <button\n                            className={classnames('', {'disable': this.state.nextButtonDisabled})}\n                            id=\"next-button\"\n                            onClick={this.handleButtonClick}>\n                                Next\n                            </button>\n                        <button id=\"quit-button\" onClick={this.handleButtonClick}>Quit</button>\n                    </div>\n                </div>\n            </Fragment>\n    );\n  }\n}\n\nexport default Play;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}